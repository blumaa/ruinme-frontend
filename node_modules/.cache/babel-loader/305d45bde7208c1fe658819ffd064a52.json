{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/MessagesShow.jsx\";\nimport React, { Component, createRef } from \"react\";\nimport { Comment, Input, Sticky, Menu, Button } from \"semantic-ui-react\";\nimport SendMessageInput from './SendMessageInput';\n\nconst MessagesShow = ({\n  messages,\n  currentUser,\n  matchedUser\n}) => {\n  console.log(\"matched user\", matchedUser);\n  const messageComments = messages.map(message => {\n    const author = message.sender_id === currentUser.id ? currentUser : matchedUser;\n    return React.createElement(Comment, {\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Comment.Avatar, {\n      src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }), React.createElement(Comment.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Comment.Author, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, author.display_name), React.createElement(Comment.Metadata, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, message.created_at)), React.createElement(Comment.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, message.content), React.createElement(Comment.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Comment.Action, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Reply\"))));\n  });\n  const contextRef = createRef();\n  return React.createElement(\"div\", {\n    className: \"messageShow grid\",\n    ref: contextRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Comment.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, messageComments), React.createElement(Input, {\n    action: React.createElement(Button, {\n      onClick: () => this.props.sendMessage(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Send\"),\n    placeholder: \"Your message...\",\n    className: \"row\",\n    style: {\n      position: \"fixed\",\n      bottom: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default MessagesShow;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/MessagesShow.jsx"],"names":["React","Component","createRef","Comment","Input","Sticky","Menu","Button","SendMessageInput","MessagesShow","messages","currentUser","matchedUser","console","log","messageComments","map","message","author","sender_id","id","display_name","created_at","content","contextRef","props","sendMessage","position","bottom"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiCC,IAAjC,EAAuCC,MAAvC,QAAqD,mBAArD;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAD,KAA4C;AAC/DC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,WAA5B;AACA,QAAMG,eAAe,GAAGL,QAAQ,CAACM,GAAT,CAAaC,OAAO,IAAI;AAC9C,UAAMC,MAAM,GACVD,OAAO,CAACE,SAAR,KAAsBR,WAAW,CAACS,EAAlC,GAAuCT,WAAvC,GAAqDC,WADvD;AAEA,WACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEK,OAAO,CAACG,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,GAAG,EAAC,4DAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBF,MAAM,CAACG,YAAxB,CADF,EAEE,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMJ,OAAO,CAACK,UAAd,CADF,CAFF,EAKE,oBAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeL,OAAO,CAACM,OAAvB,CALF,EAME,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANF,CAFF,CADF;AAeD,GAlBuB,CAAxB;AAoBA,QAAMC,UAAU,GAAGtB,SAAS,EAA5B;AACA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAkC,IAAA,GAAG,EAAEsB,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,KAAT;AAAe,IAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCT,eAAhC,CADF,EAEE,oBAAC,KAAD;AACE,IAAA,MAAM,EACJ,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKU,KAAL,CAAWC,WAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAIE,IAAA,WAAW,EAAC,iBAJd;AAKE,IAAA,SAAS,EAAC,KALZ;AAME,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAaD,CApCD;;AAsCA,eAAenB,YAAf","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { Comment, Input, Sticky, Menu, Button } from \"semantic-ui-react\";\nimport SendMessageInput from './SendMessageInput'\n\nconst MessagesShow = ({ messages, currentUser, matchedUser }) => {\n  console.log(\"matched user\", matchedUser);\n  const messageComments = messages.map(message => {\n    const author =\n      message.sender_id === currentUser.id ? currentUser : matchedUser;\n    return (\n      <Comment key={message.id}>\n        <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n        <Comment.Content>\n          <Comment.Author>{author.display_name}</Comment.Author>\n          <Comment.Metadata>\n            <div>{message.created_at}</div>\n          </Comment.Metadata>\n          <Comment.Text>{message.content}</Comment.Text>\n          <Comment.Actions>\n            <Comment.Action>Reply</Comment.Action>\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    );\n  });\n\n  const contextRef = createRef();\n  return (\n    <div className=\"messageShow grid\" ref={contextRef}>\n      <Comment.Group className=\"row\">{messageComments}</Comment.Group>\n      <Input\n        action={\n          <Button onClick={() => this.props.sendMessage()}>Send</Button>\n        }\n        placeholder=\"Your message...\"\n        className=\"row\"\n        style={{ position: \"fixed\", bottom: \"10px\" }}\n      />\n    </div>\n  );\n};\n\nexport default MessagesShow;\n"]},"metadata":{},"sourceType":"module"}