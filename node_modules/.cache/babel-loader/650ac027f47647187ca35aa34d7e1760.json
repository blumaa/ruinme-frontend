{"ast":null,"code":"export const ADD_RELATIONSHIP = \"ADD_RELATIONSHIP\";\nexport const requestRelationship = relationship => ({\n  type: ADD_RELATIONSHIP,\n  relationship\n});\nexport const makeRelationship = userId => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n        },\n        body: JSON.stringify({\n          user_id: userId\n        })\n      };\n      const response = await fetch(\"http://localhost:3001/relationships\", reqObj);\n      const json = await response.json();\n      dispatch(requestRelationship(json));\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n};\nexport const ACCEPT_OR_DECLINE_RELATIONSHIP = \"ACCEPT_OR_DECLINE_RELATIONSHIP\";\nexport const acceptRelationship = relationship => ({\n  type: ACCEPT_OR_DECLINE_RELATIONSHIP,\n  relationship\n});\nexport const handleAcceptRelationship = (relationshipId, decision) => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n        },\n        body: JSON.stringify({\n          relationship_id: relationshipId,\n          decision: decision\n        })\n      };\n      const response = await fetch(\"http://localhost:3001/relationships/decide\", reqObj);\n      const json = await response.json();\n      dispatch(acceptRelationship(json));\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/store/actions/relationships.js"],"names":["ADD_RELATIONSHIP","requestRelationship","relationship","type","makeRelationship","userId","dispatch","reqObj","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","user_id","response","fetch","json","error","console","ACCEPT_OR_DECLINE_RELATIONSHIP","acceptRelationship","handleAcceptRelationship","relationshipId","decision","relationship_id"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAGC,YAAY,KAAK;AAAEC,EAAAA,IAAI,EAAEH,gBAAR;AAA0BE,EAAAA;AAA1B,CAAL,CAAxC;AACP,OAAO,MAAME,gBAAgB,GAAIC,MAAD,IAAY;AAC1C,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,OAAO,EAAE;AAAE,0BAAiB,kBAAnB;AACPC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AADN,SAFI;AAKbC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,OAAO,EAAEX;AADU,SAAf;AALO,OAAf;AASA,YAAMY,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAD,EAAwCX,MAAxC,CAA5B;AACA,YAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAb,MAAAA,QAAQ,CAACL,mBAAmB,CAACkB,IAAD,CAApB,CAAR;AACD,KAbD,CAaE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAME,8BAA8B,GAAG,gCAAvC;AAEP,OAAO,MAAMC,kBAAkB,GAAGrB,YAAY,KAAK;AAAEC,EAAAA,IAAI,EAAEmB,8BAAR;AAAwCpB,EAAAA;AAAxC,CAAL,CAAvC;AACP,OAAO,MAAMsB,wBAAwB,GAAG,CAACC,cAAD,EAAiBC,QAAjB,KAA8B;AACpE,SAAO,MAAMpB,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,OAAO,EAAE;AAAE,0BAAiB,kBAAnB;AACPC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AADN,SAFI;AAKbC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBY,UAAAA,eAAe,EAAEF,cADE;AAEnBC,UAAAA,QAAQ,EAAEA;AAFS,SAAf;AALO,OAAf;AAUA,YAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAAD,EAA+CX,MAA/C,CAA5B;AACA,YAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAb,MAAAA,QAAQ,CAACiB,kBAAkB,CAACJ,IAAD,CAAnB,CAAR;AACD,KAdD,CAcE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,GAlBD;AAmBD,CApBM","sourcesContent":["export const ADD_RELATIONSHIP = \"ADD_RELATIONSHIP\"\n\nexport const requestRelationship = relationship => ({ type: ADD_RELATIONSHIP, relationship });\nexport const makeRelationship = (userId) => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: 'POST',\n        headers: { 'Content-Type' : 'application/json',\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          user_id: userId\n        })\n      }\n      const response = await fetch(\"http://localhost:3001/relationships\", reqObj);\n      const json = await response.json();\n      dispatch(requestRelationship(json));\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n};\n\nexport const ACCEPT_OR_DECLINE_RELATIONSHIP = \"ACCEPT_OR_DECLINE_RELATIONSHIP\"\n\nexport const acceptRelationship = relationship => ({ type: ACCEPT_OR_DECLINE_RELATIONSHIP, relationship });\nexport const handleAcceptRelationship = (relationshipId, decision) => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: 'POST',\n        headers: { 'Content-Type' : 'application/json',\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          relationship_id: relationshipId,\n          decision: decision\n        })\n      }\n      const response = await fetch(\"http://localhost:3001/relationships/decide\", reqObj);\n      const json = await response.json();\n      dispatch(acceptRelationship(json));\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}