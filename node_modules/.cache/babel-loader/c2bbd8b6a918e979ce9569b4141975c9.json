{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/LogInForm.jsx\";\nimport React, { Component } from 'react';\nimport { Button, Form } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { fetchCurrentUser } from '../store/actions/users';\nconst LOGIN = \"http://localhost:3001/login\";\n\nclass LogInForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleSubmit = async () => {\n      const userCreds = this.state;\n      const payload = JSON.stringify({\n        user: userCreds\n      });\n      const req = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: payload\n      };\n      console.log(userCreds);\n      const resp = await fetch(LOGIN, req);\n      const data = await resp.json();\n      console.log(data, data.user, data.token);\n\n      if (data.token) {\n        localStorage.setItem('token', data.token);\n        this.props.getCurrentUser();\n        this.props.history.push('/explore');\n      }\n    };\n\n    this.handleChange = event => {\n      const name = event.target.name;\n      const input = event.target.value;\n      this.setState({\n        [name]: input\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const passwordsMatch = this.state.password === this.state.passwordConfirm ? \"Passwords match\" : \"Passwords MUST match\";\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      onChange: this.handleChange,\n      className: \"ui main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Form.Input, {\n      label: \"Email\",\n      type: \"email\",\n      name: \"email\",\n      id: \"email-field\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Form.Input, {\n      label: \"Enter Password\",\n      name: \"password\",\n      type: \"password\",\n      id: \"password-field\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.User.current_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getCurrentUser: () => dispatch(fetchCurrentUser())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/LogInForm.jsx"],"names":["React","Component","Button","Form","connect","fetchCurrentUser","LOGIN","LogInForm","state","email","password","handleSubmit","userCreds","payload","JSON","stringify","user","req","method","headers","body","console","log","resp","fetch","data","json","token","localStorage","setItem","props","getCurrentUser","history","push","handleChange","event","name","target","input","value","setState","componentDidMount","render","passwordsMatch","passwordConfirm","mapStateToProps","currentUser","User","current_user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Button, Form } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { fetchCurrentUser } from '../store/actions/users'\n\nconst LOGIN = \"http://localhost:3001/login\"\n\nclass LogInForm extends Component {\n\n\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n\n    componentDidMount() {\n\n\n    }\n\n\n    handleSubmit = async () => {\n\n        const userCreds = this.state\n        const payload = JSON.stringify({user: userCreds})\n        const req = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: payload\n        }\n        console.log(userCreds)\n        const resp = await fetch(LOGIN, req)\n        const data = await resp.json()\n        console.log(data, data.user, data.token)\n        if (data.token) {\n        localStorage.setItem('token', data.token)\n        this.props.getCurrentUser()\n        this.props.history.push('/explore')\n\n    }\n\n\n    }\n\n    handleChange = (event) => {\n        const name = event.target.name\n        const input = event.target.value\n        this.setState({\n            [name]:input\n        }, )\n    }\n\n\n    render() {\n\n        const passwordsMatch = this.state.password === this.state.passwordConfirm ? \"Passwords match\" : \"Passwords MUST match\"\n\n\n        return <Form onSubmit={this.handleSubmit} onChange={this.handleChange} className=\"ui main\">\n            <Form.Input label='Email' type='email'name=\"email\"id=\"email-field\" required/>\n            <Form.Input label='Enter Password' name=\"password\"type='password' id='password-field' required/>\n            <Button type='submit'>Submit</Button>\n        </Form>\n    }\n\n\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUser: state.User.current_user\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n        return { getCurrentUser: ()=> dispatch(fetchCurrentUser())}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm)\n"]},"metadata":{},"sourceType":"module"}