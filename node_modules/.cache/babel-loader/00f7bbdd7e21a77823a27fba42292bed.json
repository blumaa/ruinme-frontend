{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/UserAnalytics.js\";\nimport React, { Component } from \"react\";\nimport { Statistic, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { fetchReviews } from \"../store/actions/reviews\";\n\nclass UserAnalytics extends Component {\n  componentDidMount() {\n    this.props.getReviews();\n  }\n\n  render() {\n    let reviews;\n\n    if (this.props.reviews) {\n      console.log(this.props.reviews);\n      reviews = this.props.reviews.map(rev => {\n        return React.createElement(Statistic, {\n          color: \"red\",\n          key: rev.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(Statistic.Label, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, rev.comment));\n      });\n    }\n\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Your Reviews\"), React.createElement(Statistic.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, reviews ? reviews : \"Date more people\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    reviews: state.Review.currentUserReviews\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReviews: () => dispatch(fetchReviews())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAnalytics);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/UserAnalytics.js"],"names":["React","Component","Statistic","Header","connect","fetchReviews","UserAnalytics","componentDidMount","props","getReviews","render","reviews","console","log","map","rev","id","comment","mapStateToProps","state","Review","currentUserReviews","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACpCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAIC,OAAJ;;AACA,QAAI,KAAKH,KAAL,CAAWG,OAAf,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWG,OAAvB;AACAA,MAAAA,OAAO,GAAG,KAAKH,KAAL,CAAWG,OAAX,CAAmBG,GAAnB,CAAuBC,GAAG,IAAI;AACtC,eACE,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAC,KAAjB;AAAuB,UAAA,GAAG,EAAEA,GAAG,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkBD,GAAG,CAACE,OAAtB,CADF,CADF;AAKD,OANS,CAAV;AAOD;;AACD,WACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkBN,OAAO,GAAGA,OAAH,GAAa,kBAAtC,CAFF,CADF;AAMD;;AAvBmC;;AAyBtC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,OAAO,EAAEQ,KAAK,CAACC,MAAN,CAAaC;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLd,IAAAA,UAAU,EAAE,MAAMc,QAAQ,CAAClB,YAAY,EAAb;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBc,eADoB,EAEpBI,kBAFoB,CAAP,CAGbhB,aAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Statistic, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { fetchReviews } from \"../store/actions/reviews\";\n\nclass UserAnalytics extends Component {\n  componentDidMount() {\n    this.props.getReviews();\n  }\n\n  render() {\n    let reviews;\n    if (this.props.reviews) {\n      console.log(this.props.reviews);\n      reviews = this.props.reviews.map(rev => {\n        return (\n          <Statistic color=\"red\" key={rev.id}>\n            <Statistic.Label>{rev.comment}</Statistic.Label>\n          </Statistic>\n        );\n      });\n    }\n    return (\n      <>\n        <Header>Your Reviews</Header>\n        <Statistic.Group>{reviews ? reviews : \"Date more people\"}</Statistic.Group>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    reviews: state.Review.currentUserReviews\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReviews: () => dispatch(fetchReviews())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserAnalytics);\n"]},"metadata":{},"sourceType":"module"}