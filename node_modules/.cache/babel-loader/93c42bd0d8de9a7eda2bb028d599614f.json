{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/UserAnalytics.js\";\nimport React, { Component } from \"react\";\nimport { Statistic, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { fetchReviews } from '../store/actions/reviews';\n\nclass UserAnalytics extends Component {\n  componentDidMount() {\n    this.props.getReviews();\n  }\n\n  render() {\n    const reviews = this.props.reviews.map(rev => {\n      return React.createElement(Statistic, {\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Statistic.Value, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"27\"), React.createElement(Statistic.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, rev.comment));\n    });\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Your Reviews\"), React.createElement(Statistic.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, reviews));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    reviews: state.Review.currentUserReviews\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReviews: () => dispatch(fetchReviews())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAnalytics);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/UserAnalytics.js"],"names":["React","Component","Statistic","Header","connect","fetchReviews","UserAnalytics","componentDidMount","props","getReviews","render","reviews","map","rev","comment","mapStateToProps","state","Review","currentUserReviews","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,mBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,0BAA7B;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AACpCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,OAAO,GAAG,KAAKH,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAuBC,GAAG,IAAI;AAC5C,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBA,GAAG,CAACC,OAAtB,CAFF,CADF;AAMD,KAPe,CAAhB;AAQA,WACE,0CACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,SAAD,CAAW,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OADH,CAFF,CADF;AAQD;;AAtBmC;;AAwBtC,MAAMI,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,OAAO,EAAEK,KAAK,CAACC,MAAN,CAAaC;AADjB,GAAP;AAGD,CAJD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLX,IAAAA,UAAU,EAAE,MAAMW,QAAQ,CAACf,YAAY,EAAb;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAeD,OAAO,CACpBW,eADoB,EAEpBI,kBAFoB,CAAP,CAGbb,aAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Statistic, Header } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { fetchReviews } from '../store/actions/reviews'\n\nclass UserAnalytics extends Component {\n  componentDidMount() {\n    this.props.getReviews()\n  }\n\n  render() {\n    const reviews = this.props.reviews.map(rev => {\n      return (\n        <Statistic color=\"red\">\n          <Statistic.Value>27</Statistic.Value>\n          <Statistic.Label>{rev.comment}</Statistic.Label>\n        </Statistic>\n      )\n    })\n    return (\n      <>\n        <Header>Your Reviews</Header>\n        <Statistic.Group>\n          {reviews}\n        </Statistic.Group>\n      </>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    reviews: state.Review.currentUserReviews\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getReviews: () => dispatch(fetchReviews())\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UserAnalytics);\n"]},"metadata":{},"sourceType":"module"}