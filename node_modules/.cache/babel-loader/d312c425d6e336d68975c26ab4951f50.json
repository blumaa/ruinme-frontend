{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/RelationshipsList.jsx\";\nimport React, { Component } from \"react\";\nimport RelationshipItem from \"./RelationshipItem\";\nimport { connect } from \"react-redux\";\nimport { Menu } from \"semantic-ui-react\";\n\nconst RelationshipList = props => {\n  let relationshipsItems;\n\n  if (props.relationships) {\n    relationshipsItems = props.relationships.map(relationship => {\n      return React.createElement(Menu.Item, {\n        key: relationship.relationship_id,\n        active: props.activeRelationship === relationship,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(RelationshipItem, {\n        user: props.user,\n        relationship: relationship,\n        selectRelationship: props.selectRelationship,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }));\n    });\n  }\n\n  return React.createElement(Menu, {\n    fluid: true,\n    vertical: true,\n    tabular: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, relationshipsItems || \"No relationships found\");\n};\n\nconst mapStateToProps = state => {\n  const relationships = state.User.current_user.relationships.filter(rel => !rel.pending);\n  return {\n    relationships,\n    user: state.User.current_user\n  };\n};\n\nexport default connect(mapStateToProps)(RelationshipList);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/RelationshipsList.jsx"],"names":["React","Component","RelationshipItem","connect","Menu","RelationshipList","props","relationshipsItems","relationships","map","relationship","relationship_id","activeRelationship","user","selectRelationship","mapStateToProps","state","User","current_user","filter","rel","pending"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAChC,MAAIC,kBAAJ;;AAEA,MAAID,KAAK,CAACE,aAAV,EAAyB;AACvBD,IAAAA,kBAAkB,GAAGD,KAAK,CAACE,aAAN,CAAoBC,GAApB,CAAwBC,YAAY,IAAI;AAC3D,aACE,oBAAC,IAAD,CAAM,IAAN;AACE,QAAA,GAAG,EAAEA,YAAY,CAACC,eADpB;AAEE,QAAA,MAAM,EAAEL,KAAK,CAACM,kBAAN,KAA6BF,YAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE,oBAAC,gBAAD;AACE,QAAA,IAAI,EAAEJ,KAAK,CAACO,IADd;AAEE,QAAA,YAAY,EAAEH,YAFhB;AAGE,QAAA,kBAAkB,EAAEJ,KAAK,CAACQ,kBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAYD,KAboB,CAArB;AAcD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAY,IAAA,QAAQ,MAApB;AAAqB,IAAA,OAAO,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,kBAAkB,IAAI,wBADzB,CADF;AAKD,CAzBD;;AA2BA,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAMR,aAAa,GAAGQ,KAAK,CAACC,IAAN,CAAWC,YAAX,CAAwBV,aAAxB,CAAsCW,MAAtC,CAA6CC,GAAG,IAAG,CAACA,GAAG,CAACC,OAAxD,CAAtB;AACA,SAAO;AACLb,IAAAA,aADK;AAELK,IAAAA,IAAI,EAAEG,KAAK,CAACC,IAAN,CAAWC;AAFZ,GAAP;AAID,CAND;;AAQA,eAAef,OAAO,CAACY,eAAD,CAAP,CAAyBV,gBAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport RelationshipItem from \"./RelationshipItem\";\nimport { connect } from \"react-redux\";\nimport { Menu } from \"semantic-ui-react\";\n\nconst RelationshipList = props => {\n  let relationshipsItems;\n\n  if (props.relationships) {\n    relationshipsItems = props.relationships.map(relationship => {\n      return (\n        <Menu.Item\n          key={relationship.relationship_id}\n          active={props.activeRelationship === relationship}\n        >\n          <RelationshipItem\n            user={props.user}\n            relationship={relationship}\n            selectRelationship={props.selectRelationship}\n          />\n        </Menu.Item>\n      );\n    });\n  }\n\n  return (\n    <Menu fluid vertical tabular>\n      {relationshipsItems || \"No relationships found\"}\n    </Menu>\n  );\n};\n\nconst mapStateToProps = state => {\n  const relationships = state.User.current_user.relationships.filter(rel=> !rel.pending)\n  return {\n    relationships,\n    user: state.User.current_user\n  };\n};\n\nexport default connect(mapStateToProps)(RelationshipList);\n"]},"metadata":{},"sourceType":"module"}