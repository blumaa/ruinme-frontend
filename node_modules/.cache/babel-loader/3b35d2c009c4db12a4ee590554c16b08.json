{"ast":null,"code":"export const FETCH_USERS = \"FETCH_USERS\";\nexport const getUsers = users => ({\n  type: FETCH_USERS,\n  users\n});\nexport const fetchUsers = () => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: 'GET',\n        headers: {\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n        }\n      };\n      const response = await fetch(\"http://localhost:3001/users\", reqObj);\n      const json = await response.json();\n      dispatch(getUsers(json));\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n};\nexport const addUser = user => {\n  const ageInt = parseInt(user.age);\n  const reqObj = {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      age: ageInt,\n      email: user.email,\n      display_name: user.displayName,\n      gender: user.gender,\n      zip_code: user.zipCode,\n      looking_for: user.lookingFor,\n      bio: user.bio\n    })\n  };\n  return dispatch => {\n    dispatch({\n      type: 'START_ADDING_USER_REQUEST'\n    });\n    fetch('http://localhost:3001/sign_up', reqObj).then(response => response.json()).then(user => dispatch({\n      type: 'ADD_USER',\n      user\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/store/actions/users.js"],"names":["FETCH_USERS","getUsers","users","type","fetchUsers","dispatch","reqObj","method","headers","Authorization","localStorage","getItem","response","fetch","json","error","console","addUser","user","ageInt","parseInt","age","body","JSON","stringify","email","display_name","displayName","gender","zip_code","zipCode","looking_for","lookingFor","bio","then"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AAAEC,EAAAA,IAAI,EAAEH,WAAR;AAAqBE,EAAAA;AAArB,CAAL,CAAtB;AACP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC9B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,KADK;AAEbC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AADN;AAFI,OAAf;AAMA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgCP,MAAhC,CAA5B;AACA,YAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAT,MAAAA,QAAQ,CAACJ,QAAQ,CAACa,IAAD,CAAT,CAAR;AACD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AACD;AACF,GAdD;AAeD,CAhBM;AAmBP,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAU;AAC/B,QAAMC,MAAM,GAAGC,QAAQ,CAACF,IAAI,CAACG,GAAN,CAAvB;AACA,QAAMf,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAFI;AAGbc,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBH,MAAAA,GAAG,EAAEF,MADc;AAEnBM,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAFO;AAGnBC,MAAAA,YAAY,EAAER,IAAI,CAACS,WAHA;AAInBC,MAAAA,MAAM,EAAEV,IAAI,CAACU,MAJM;AAKnBC,MAAAA,QAAQ,EAAEX,IAAI,CAACY,OALI;AAMnBC,MAAAA,WAAW,EAAEb,IAAI,CAACc,UANC;AAOnBC,MAAAA,GAAG,EAAEf,IAAI,CAACe;AAPS,KAAf;AAHO,GAAf;AAaA,SAAO5B,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAU,IAAAA,KAAK,CAAC,+BAAD,EAAkCP,MAAlC,CAAL,CACG4B,IADH,CACQtB,QAAQ,IAAIA,QAAQ,CAACE,IAAT,EADpB,EAEGoB,IAFH,CAEQhB,IAAI,IAAIb,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAE,UAAR;AAAoBe,MAAAA;AAApB,KAAD,CAFxB;AAGD,GALD;AAMD,CArBM","sourcesContent":["export const FETCH_USERS = \"FETCH_USERS\";\n\nexport const getUsers = users => ({ type: FETCH_USERS, users });\nexport const fetchUsers = () => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      }\n      const response = await fetch(\"http://localhost:3001/users\", reqObj);\n      const json = await response.json();\n      dispatch(getUsers(json));\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n    }\n  };\n};\n\n\nexport const addUser = (user) => {\n  const ageInt = parseInt(user.age)\n  const reqObj = {\n    method: \"POST\",\n    headers: {'Content-Type': 'application/json' },\n    body: JSON.stringify({\n      age: ageInt,\n      email: user.email,\n      display_name: user.displayName,\n      gender: user.gender,\n      zip_code: user.zipCode,\n      looking_for: user.lookingFor,\n      bio: user.bio\n    })\n  }\n  return dispatch => {\n    dispatch({ type: 'START_ADDING_USER_REQUEST' });\n    fetch('http://localhost:3001/sign_up', reqObj)\n      .then(response => response.json())\n      .then(user => dispatch({ type: 'ADD_USER', user }));\n  };\n}\n"]},"metadata":{},"sourceType":"module"}