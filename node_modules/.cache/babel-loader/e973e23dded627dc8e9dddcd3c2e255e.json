{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ExplorePage.jsx\";\nimport React, { Component } from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport UserCard from \"./UserCard\";\nimport ProfilePage from \"./ProfilePage\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { fetchUsers } from \"../store/actions/fetchUsers\";\n\nclass ExplorePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userShow: {}\n    };\n\n    this.componentDidMount = () => {\n      this.props.getUsers();\n    };\n\n    this.userShow = user => {\n      console.log(user);\n      this.setState({\n        userShow: [user]\n      });\n    };\n\n    this.handleBackButton = event => {\n      this.setState({\n        userShow: []\n      });\n    };\n  }\n\n  render() {\n    const users = this.props.users;\n    let userCards = users.data ? users.data.map(user => React.createElement(UserCard, {\n      key: user.id,\n      user: user,\n      userShow: this.userShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })) : \"no users\";\n    return React.createElement(\"div\", {\n      className: \"ui main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.userShow.id ? React.createElement(ProfilePage, {\n      user: this.state.userShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }) : React.createElement(Card.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \" \", userCards, \" \"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorePage);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ExplorePage.jsx"],"names":["React","Component","Card","UserCard","ProfilePage","connect","NavLink","fetchUsers","ExplorePage","state","userShow","componentDidMount","props","getUsers","user","console","log","setState","handleBackButton","event","render","users","userCards","data","map","id","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCQ,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD0B;;AAAA,SAKlCC,iBALkC,GAKd,MAAM;AACxB,WAAKC,KAAL,CAAWC,QAAX;AACD,KAPiC;;AAAA,SASlCH,QATkC,GASvBI,IAAI,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAE,CAACI,IAAD;AAAZ,OAAd;AACD,KAZiC;;AAAA,SAclCI,gBAdkC,GAcfC,KAAK,IAAI;AAC1B,WAAKF,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,KAhBiC;AAAA;;AAkBlCU,EAAAA,MAAM,GAAG;AAAA,UACCC,KADD,GACW,KAAKT,KADhB,CACCS,KADD;AAEP,QAAIC,SAAS,GAAGD,KAAK,CAACE,IAAN,GACZF,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAeV,IAAI,IACjB,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACW,EAApB;AAAwB,MAAA,IAAI,EAAEX,IAA9B;AAAoC,MAAA,QAAQ,EAAE,KAAKJ,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADY,GAIZ,UAJJ;AAMA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWC,QAAX,CAAoBe,EAApB,GACC,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAeY,SAAf,MAJJ,CADF;AASD;;AAnCiC;;AAsCpC,MAAMI,eAAe,GAAGjB,KAAK,IAAI;AAC/B,SAAO;AACLY,IAAAA,KAAK,EAAEZ,KAAK,CAACY,KAAN,CAAYA;AADd,GAAP;AAGD,CAJD;;AAMA,MAAMM,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AAAEf,IAAAA,QAAQ,EAAE,MAAMe,QAAQ,CAACrB,UAAU,EAAX;AAA1B,GAAP;AACD,CAFD;;AAIA,eAAeF,OAAO,CACpBqB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbnB,WAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"semantic-ui-react\";\nimport UserCard from \"./UserCard\";\nimport ProfilePage from \"./ProfilePage\";\nimport { connect } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { fetchUsers } from \"../store/actions/fetchUsers\";\n\nclass ExplorePage extends Component {\n  state = {\n    userShow: {}\n  };\n\n  componentDidMount = () => {\n    this.props.getUsers();\n  };\n\n  userShow = user => {\n    console.log(user);\n    this.setState({ userShow: [user] });\n  };\n\n  handleBackButton = event => {\n    this.setState({ userShow: [] });\n  };\n\n  render() {\n    const { users } = this.props;\n    let userCards = users.data\n      ? users.data.map(user => (\n          <UserCard key={user.id} user={user} userShow={this.userShow} />\n        ))\n      : \"no users\";\n\n    return (\n      <div className=\"ui main\">\n        {this.state.userShow.id ? (\n          <ProfilePage user={this.state.userShow} />\n        ) : (\n          <Card.Group > {userCards} </Card.Group>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { getUsers: () => dispatch(fetchUsers()) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExplorePage);\n"]},"metadata":{},"sourceType":"module"}