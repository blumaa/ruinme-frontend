{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/MessagesShow.jsx\";\nimport React, { Component } from \"react\";\nimport { Comment, Input } from \"semantic-ui-react\";\nimport SendMessageInput from \"./SendMessageInput\";\n\nconst MessagesShow = ({\n  messages,\n  currentUser,\n  showRelationship\n}) => {\n  const messageComments = messages.map(message => {\n    const author = message.sender_id === currentUser.id ? currentUser : showRelationship.receiver;\n    return React.createElement(Comment, {\n      key: message.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(Comment.Avatar, {\n      src: \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(Comment.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Comment.Author, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, author.display_name), React.createElement(Comment.Metadata, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, message.created_at)), React.createElement(Comment.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, message.content), React.createElement(Comment.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(Comment.Action, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Reply\"))));\n  });\n  return React.createElement(\"div\", {\n    className: \"messageShow grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Comment.Group, {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, messageComments), React.createElement(SendMessageInput, {\n    matchedUser: matchedUser,\n    currentUser: currentUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }));\n};\n\nexport default MessagesShow;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/MessagesShow.jsx"],"names":["React","Component","Comment","Input","SendMessageInput","MessagesShow","messages","currentUser","showRelationship","messageComments","map","message","author","sender_id","id","receiver","display_name","created_at","content","matchedUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,mBAA/B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAD,KAAiD;AACpE,QAAMC,eAAe,GAAGH,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAAI;AAC9C,UAAMC,MAAM,GACVD,OAAO,CAACE,SAAR,KAAsBN,WAAW,CAACO,EAAlC,GACIP,WADJ,GAEIC,gBAAgB,CAACO,QAHvB;AAIA,WACE,oBAAC,OAAD;AAAS,MAAA,GAAG,EAAEJ,OAAO,CAACG,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAgB,MAAA,GAAG,EAAC,4DAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBF,MAAM,CAACI,YAAxB,CADF,EAEE,oBAAC,OAAD,CAAS,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAML,OAAO,CAACM,UAAd,CADF,CAFF,EAKE,oBAAC,OAAD,CAAS,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeN,OAAO,CAACO,OAAvB,CALF,EAME,oBAAC,OAAD,CAAS,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD,CAAS,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CANF,CAFF,CADF;AAeD,GApBuB,CAAxB;AAsBA,SACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD,CAAS,KAAT;AAAe,IAAA,SAAS,EAAC,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCT,eAAhC,CADF,EAEE,oBAAC,gBAAD;AAAkB,IAAA,WAAW,EAAEU,WAA/B;AAA4C,IAAA,WAAW,EAAEZ,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA7BD;;AA+BA,eAAeF,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Comment, Input } from \"semantic-ui-react\";\nimport SendMessageInput from \"./SendMessageInput\";\n\nconst MessagesShow = ({ messages, currentUser, showRelationship }) => {\n  const messageComments = messages.map(message => {\n    const author =\n      message.sender_id === currentUser.id\n        ? currentUser\n        : showRelationship.receiver;\n    return (\n      <Comment key={message.id}>\n        <Comment.Avatar src=\"https://react.semantic-ui.com/images/avatar/small/matt.jpg\" />\n        <Comment.Content>\n          <Comment.Author>{author.display_name}</Comment.Author>\n          <Comment.Metadata>\n            <div>{message.created_at}</div>\n          </Comment.Metadata>\n          <Comment.Text>{message.content}</Comment.Text>\n          <Comment.Actions>\n            <Comment.Action>Reply</Comment.Action>\n          </Comment.Actions>\n        </Comment.Content>\n      </Comment>\n    );\n  });\n\n  return (\n    <div className=\"messageShow grid\">\n      <Comment.Group className=\"row\">{messageComments}</Comment.Group>\n      <SendMessageInput matchedUser={matchedUser} currentUser={currentUser} />\n    </div>\n  );\n};\n\nexport default MessagesShow;\n"]},"metadata":{},"sourceType":"module"}