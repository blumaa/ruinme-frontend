{"ast":null,"code":"import _defineProperty from \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst reviewReducer = (state = {\n  Reviews: [],\n  requesting: false\n}, action) => {\n  switch (action.type) {\n    case \"POST_REVIEW\":\n      return _objectSpread({}, state, {\n        Reviews: [...state.all, action.review],\n        requesting: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/store/reducers/reviewReducer.js"],"names":["reviewReducer","state","Reviews","requesting","action","type","all","review","userReducer"],"mappings":";;;;;;AAAA,MAAMA,aAAa,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE,EAAX;AAAeC,EAAAA,UAAU,EAAE;AAA3B,CAAT,EAA6CC,MAA7C,KAAwD;AAC5E,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,+BACKJ,KADL;AAEEC,QAAAA,OAAO,EAAE,CAAC,GAAGD,KAAK,CAACK,GAAV,EAAeF,MAAM,CAACG,MAAtB,CAFX;AAGEJ,QAAAA,UAAU,EAAE;AAHd;;AAMA;AACE,aAAOF,KAAP;AATN;AAWC,CAZH;;AAcE,eAAeO,WAAf","sourcesContent":["const reviewReducer = (state = { Reviews: [], requesting: false }, action) => {\n  switch (action.type) {\n    case \"POST_REVIEW\":\n      return {\n        ...state,\n        Reviews: [...state.all ,action.review],\n        requesting: true\n      };\n\n      default:\n        return state;\n    }\n  };\n\n  export default userReducer;\n"]},"metadata":{},"sourceType":"module"}