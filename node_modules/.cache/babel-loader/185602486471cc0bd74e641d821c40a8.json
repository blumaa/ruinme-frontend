{"ast":null,"code":"export const POST_REVIEW = \"POST_REVIEW\";\nexport const sendMessage = review => ({\n  type: POST_REVIEW,\n  review\n});\nexport const makeReview = (user_id, payload) => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n        },\n        body: JSON.stringify({\n          comment: payload.comment,\n          user_id\n        })\n      };\n      const response = await fetch(\"http://localhost:3001/reviews\", reqObj);\n      const json = await response.json();\n      console.log(json);\n      dispatch(sendMessage(json));\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n    }\n  };\n};\nexport const GET_REVIEWS = \"GET_REVIEWS\";\nexport const fetchReviews = reviews => ({\n  type: GET_REVIEWS,\n  review\n});\nexport const getCurrentUserReviews = (user_id, payload) => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \".concat(localStorage.getItem(\"token\"))\n        },\n        body: JSON.stringify({\n          comment: payload.comment,\n          user_id\n        })\n      };\n      const response = await fetch(\"http://localhost:3001/reviews\", reqObj);\n      const json = await response.json();\n      console.log(json);\n      dispatch(sendMessage(json));\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/store/actions/reviews.js"],"names":["POST_REVIEW","sendMessage","review","type","makeReview","user_id","payload","dispatch","reqObj","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","comment","response","fetch","json","console","log","error","GET_REVIEWS","fetchReviews","reviews","getCurrentUserReviews"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,WAAW,GAAGC,MAAM,KAAK;AACpCC,EAAAA,IAAI,EAAEH,WAD8B;AAEpCE,EAAAA;AAFoC,CAAL,CAA1B;AAKP,OAAO,MAAME,UAAU,GAAG,CAACC,OAAD,EAAUC,OAAV,KAAsB;AAC9C,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAFN,SAFI;AAMbC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,OAAO,EAAEX,OAAO,CAACW,OADE;AAEnBZ,UAAAA;AAFmB,SAAf;AANO,OAAf;AAWA,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkCX,MAAlC,CAA5B;AACA,YAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAb,MAAAA,QAAQ,CAACN,WAAW,CAACmB,IAAD,CAAZ,CAAR;AACD,KAhBD,CAgBE,OAAOG,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,GApBD;AAqBD,CAtBM;AAwBP,OAAO,MAAMC,WAAW,GAAG,aAApB;AAEP,OAAO,MAAMC,YAAY,GAAGC,OAAO,KAAK;AACtCvB,EAAAA,IAAI,EAAEqB,WADgC;AAEtCtB,EAAAA;AAFsC,CAAL,CAA5B;AAKP,OAAO,MAAMyB,qBAAqB,GAAG,CAACtB,OAAD,EAAUC,OAAV,KAAsB;AACzD,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,mBAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AAFN,SAFI;AAMbC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,OAAO,EAAEX,OAAO,CAACW,OADE;AAEnBZ,UAAAA;AAFmB,SAAf;AANO,OAAf;AAWA,YAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAAD,EAAkCX,MAAlC,CAA5B;AACA,YAAMY,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAT,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAb,MAAAA,QAAQ,CAACN,WAAW,CAACmB,IAAD,CAAZ,CAAR;AACD,KAhBD,CAgBE,OAAOG,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,GApBD;AAqBD,CAtBM","sourcesContent":["export const POST_REVIEW = \"POST_REVIEW\";\n\nexport const sendMessage = review => ({\n  type: POST_REVIEW,\n  review\n});\n\nexport const makeReview = (user_id, payload) => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          comment: payload.comment,\n          user_id\n        })\n      };\n      const response = await fetch(\"http://localhost:3001/reviews\", reqObj);\n      const json = await response.json();\n      console.log(json)\n      dispatch(sendMessage(json));\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n    }\n  };\n};\n\nexport const GET_REVIEWS = \"GET_REVIEWS\";\n\nexport const fetchReviews = reviews => ({\n  type: GET_REVIEWS,\n  review\n});\n\nexport const getCurrentUserReviews = (user_id, payload) => {\n  return async dispatch => {\n    try {\n      const reqObj = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify({\n          comment: payload.comment,\n          user_id\n        })\n      };\n      const response = await fetch(\"http://localhost:3001/reviews\", reqObj);\n      const json = await response.json();\n      console.log(json)\n      dispatch(sendMessage(json));\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}