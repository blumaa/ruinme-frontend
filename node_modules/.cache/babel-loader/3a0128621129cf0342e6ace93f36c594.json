{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ExplorePage.jsx\";\nimport React, { Component } from 'react';\nimport { Card, Header, Icon } from 'semantic-ui-react';\nimport UserCard from './UserCard';\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../store/actions/users\";\nimport SetsUserAuthState from '../HigherOrderConcerns/getAuthState';\n\nclass ExplorePage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userShow: {}\n    };\n\n    this.componentDidMount = () => {\n      this.props.getUsers();\n    };\n\n    this.userShow = user => {\n      console.log(user);\n      this.setState({\n        userShow: [user]\n      });\n    };\n  }\n\n  render() {\n    if (this.props.userData) {\n      const userCards = this.props.userData.map(user => React.createElement(UserCard, {\n        key: user.id,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }));\n      return React.createElement(Card.Group, {\n        itemsPerRow: 5,\n        className: \"ui main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, userCards);\n    } else {\n      return React.createElement(Header, {\n        as: \"h2\",\n        icon: true,\n        textAlign: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"users\",\n        circular: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), React.createElement(Header.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Please Log In to start ruining everyone \"));\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  users = state.User.all.filter(user => user.id != state.User.current_user.id);\n  return {\n    userData: state.User.all\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getUsers: () => dispatch(fetchUsers())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExplorePage);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ExplorePage.jsx"],"names":["React","Component","Card","Header","Icon","UserCard","connect","fetchUsers","SetsUserAuthState","ExplorePage","state","userShow","componentDidMount","props","getUsers","user","console","log","setState","render","userData","userCards","map","id","mapStateToProps","users","User","all","filter","current_user","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,QAAmC,mBAAnC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAClCS,KADkC,GAC1B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD0B;;AAAA,SAKlCC,iBALkC,GAKd,MAAM;AACxB,WAAKC,KAAL,CAAWC,QAAX;AACD,KAPiC;;AAAA,SASlCH,QATkC,GASvBI,IAAI,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA,QAAQ,EAAE,CAACI,IAAD;AAAZ,OAAd;AACD,KAZiC;AAAA;;AAclCI,EAAAA,MAAM,GAAG;AAEP,QAAI,KAAKN,KAAL,CAAWO,QAAf,EAAyB;AACvB,YAAMC,SAAS,GAAG,KAAKR,KAAL,CAAWO,QAAX,CAAoBE,GAApB,CAAwBP,IAAI,IAAG,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,IAAI,CAACQ,EAApB;AAAwB,QAAA,IAAI,EAAER,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/B,CAAlB;AACA,aACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,WAAW,EAAE,CAAzB;AAA4B,QAAA,SAAS,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGM,SADH,CADF;AAIG,KANL,MAQK;AACH,aACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,IAAI,MAApB;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,QAAQ,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,MAAD,CAAQ,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAFF,CADF;AAMD;AACF;;AAhCiC;;AAmCpC,MAAMG,eAAe,GAAGd,KAAK,IAAI;AAC/Be,EAAAA,KAAK,GAAGf,KAAK,CAACgB,IAAN,CAAWC,GAAX,CAAeC,MAAf,CAAsBb,IAAI,IAAGA,IAAI,CAACQ,EAAL,IAAWb,KAAK,CAACgB,IAAN,CAAWG,YAAX,CAAwBN,EAAhE,CAAR;AACA,SAAO;AACLH,IAAAA,QAAQ,EAAEV,KAAK,CAACgB,IAAN,CAAWC;AADhB,GAAP;AAGD,CALD;;AAOA,MAAMG,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AAAEjB,IAAAA,QAAQ,EAAE,MAAMiB,QAAQ,CAACxB,UAAU,EAAX;AAA1B,GAAP;AACD,CAFD;;AAKA,eAAeD,OAAO,CACpBkB,eADoB,EAEpBM,kBAFoB,CAAP,CAGbrB,WAHa,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { Card, Header, Icon } from 'semantic-ui-react'\nimport UserCard from './UserCard'\nimport { connect } from \"react-redux\";\nimport { fetchUsers } from \"../store/actions/users\";\nimport SetsUserAuthState from '../HigherOrderConcerns/getAuthState'\n\nclass ExplorePage extends Component {\n  state = {\n    userShow: {}\n  };\n\n  componentDidMount = () => {\n    this.props.getUsers();\n  };\n\n  userShow = user => {\n    console.log(user);\n    this.setState({ userShow: [user] });\n  };\n\n  render() {\n\n    if (this.props.userData) {\n      const userCards = this.props.userData.map(user=> <UserCard key={user.id} user={user} />)\n      return (\n        <Card.Group itemsPerRow={5} className=\"ui main\">\n          {userCards}\n        </Card.Group>\n      ) }\n\n    else {\n      return (\n        <Header as='h2' icon textAlign='center'>\n          <Icon name='users' circular />\n          <Header.Content>Please Log In to start ruining everyone </Header.Content>\n        </Header>\n      )\n    }\n  }\n}\n\nconst mapStateToProps = state => {\n  users = state.User.all.filter(user=> user.id != state.User.current_user.id)\n  return {\n    userData: state.User.all\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { getUsers: () => dispatch(fetchUsers()) };\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExplorePage);\n"]},"metadata":{},"sourceType":"module"}