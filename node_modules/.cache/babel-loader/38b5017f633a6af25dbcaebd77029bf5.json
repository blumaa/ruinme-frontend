{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ReviewCreateModal.jsx\";\nimport React, { Component } from \"react\";\nimport { Icon, Button, Modal, Header, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { makeReview } from '../store/reviews';\n\nclass ReviewCreateModal extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      comment: \"\"\n    };\n\n    this.handleOpen = () => this.setState({\n      modalOpen: true\n    });\n\n    this.handleClose = () => this.setState({\n      modalOpen: false\n    });\n\n    this.handleSubmit = () => {\n      this.handleClose();\n      const input = this.state;\n      delete input.modalOpen;\n      this.props.createReview(this.props.user.id, input);\n      console.log(\"review sent\");\n      this.setState({\n        comment: \"\"\n      });\n    };\n\n    this.handleChange = event => {\n      const name = event.target.name;\n      const input = event.target.value;\n      this.setState({\n        [name]: input\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Show Modal\"),\n      open: this.state.modalOpen,\n      onClose: this.handleClose,\n      basic: true,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Header, {\n      icon: \"browser\",\n      content: \"Your comment about \" + this.props.user.display_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Modal.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Form.TextArea, {\n      name: \"comment\",\n      value: this.state.comment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))), React.createElement(Modal.Actions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"green\",\n      onClick: this.handleSubmit,\n      inverted: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      name: \"checkmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \" Submit\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.User.current_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    createReview: (id, payload) => dispatch(makeReview(id, payload))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReviewCreateModal);","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ReviewCreateModal.jsx"],"names":["React","Component","Icon","Button","Modal","Header","Form","connect","makeReview","ReviewCreateModal","state","modalOpen","comment","handleOpen","setState","handleClose","handleSubmit","input","props","createReview","user","id","console","log","handleChange","event","name","target","value","render","display_name","mapStateToProps","currentUser","User","current_user","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Icon, Button, Modal, Header, Form } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { makeReview } from '../store/reviews'\n\n\nclass ReviewCreateModal extends Component {\n\n  state = { modalOpen: false, comment: \"\" }\n\n  handleOpen = () => this.setState({ modalOpen: true })\n\n  handleClose = () => this.setState({ modalOpen: false })\n\n  handleSubmit=()=> {\n    this.handleClose()\n    const input = this.state\n    delete input.modalOpen\n    this.props.createReview(this.props.user.id, input)\n    console.log(\"review sent\")\n    this.setState({comment: \"\"})\n  }\n\n  handleChange = (event) => {\n      const name = event.target.name\n      const input = event.target.value\n      this.setState({\n          [name]:input\n      }, )\n  }\n\n  render() {\n    return (\n\n      <Modal\n        trigger={<Button onClick={this.handleOpen}>Show Modal</Button>}\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n        basic\n        size=\"small\"\n      >\n        <Header icon=\"browser\" content={\"Your comment about \" + this.props.user.display_name} />\n        <Modal.Content>\n          <Form onChange={this.handleChange} >\n            <Form.TextArea name=\"comment\" value={this.state.comment}/>\n          </Form>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button color=\"green\" onClick={this.handleSubmit} inverted>\n            <Icon name=\"checkmark\" /> Submit\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.User.current_user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return { createReview: (id, payload) => dispatch(makeReview(id, payload)) };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReviewCreateModal);\n"]},"metadata":{},"sourceType":"module"}