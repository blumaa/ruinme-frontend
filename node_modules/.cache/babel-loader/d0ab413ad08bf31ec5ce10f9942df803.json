{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ImageTestForm.js\";\nimport ActiveStorageProvider from \"react-activestorage-provider\";\nimport React, { Component } from \"react\";\n\nclass ImageTestForm extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ui main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(ActiveStorageProvider, {\n      endpoint: {\n        path: \"/profile\",\n        model: \"User\",\n        attribute: \"avatar\",\n        method: \"PUT\"\n      },\n      onSubmit: user => this.setState({\n        avatar: user.avatar\n      }),\n      render: ({\n        handleUpload,\n        uploads,\n        ready\n      }) => React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        disabled: !ready,\n        onChange: e => handleUpload(e.currentTarget.files),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }), uploads.map(upload => {\n        switch (upload.state) {\n          case \"waiting\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 28\n              },\n              __self: this\n            }, \"Waiting to upload \", upload.file.name);\n\n          case \"uploading\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 34\n              },\n              __self: this\n            }, \"Uploading \", upload.file.name, \": \", upload.progress, \"%\");\n\n          case \"error\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 40\n              },\n              __self: this\n            }, \"Error uploading \", upload.file.name, \": \", upload.error);\n\n          case \"finished\":\n            return React.createElement(\"p\", {\n              key: upload.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46\n              },\n              __self: this\n            }, \"Finished uploading \", upload.file.name);\n        }\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ImageTestForm;","map":{"version":3,"sources":["/Users/flatironschool/Development/code/MOD4/ruinme/ruinme-frontend/src/components/ImageTestForm.js"],"names":["ActiveStorageProvider","React","Component","ImageTestForm","render","path","model","attribute","method","user","setState","avatar","handleUpload","uploads","ready","e","currentTarget","files","map","upload","state","id","file","name","progress","error"],"mappings":";AAAA,OAAOA,qBAAP,MAAkC,8BAAlC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AACpCE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,qBAAD;AACE,MAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE,UADE;AAERC,QAAAA,KAAK,EAAE,MAFC;AAGRC,QAAAA,SAAS,EAAE,QAHH;AAIRC,QAAAA,MAAM,EAAE;AAJA,OADZ;AAOE,MAAA,QAAQ,EAAEC,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEF,IAAI,CAACE;AAAf,OAAd,CAPpB;AAQE,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAF;AAAgBC,QAAAA,OAAhB;AAAyBC,QAAAA;AAAzB,OAAD,KACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,EAAE,CAACA,KAFb;AAGE,QAAA,QAAQ,EAAEC,CAAC,IAAIH,YAAY,CAACG,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOGJ,OAAO,CAACK,GAAR,CAAYC,MAAM,IAAI;AACrB,gBAAQA,MAAM,CAACC,KAAf;AACE,eAAK,SAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAED,MAAM,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCACqBF,MAAM,CAACG,IAAP,CAAYC,IADjC,CADF;;AAKF,eAAK,WAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAEJ,MAAM,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BACaF,MAAM,CAACG,IAAP,CAAYC,IADzB,QACiCJ,MAAM,CAACK,QADxC,MADF;;AAKF,eAAK,OAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAEL,MAAM,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACmBF,MAAM,CAACG,IAAP,CAAYC,IAD/B,QACuCJ,MAAM,CAACM,KAD9C,CADF;;AAKF,eAAK,UAAL;AACE,mBACE;AAAG,cAAA,GAAG,EAAEN,MAAM,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACsBF,MAAM,CAACG,IAAP,CAAYC,IADlC,CADF;AApBJ;AA0BD,OA3BA,CAPH,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAmDD;;AArDmC;;AAwDtC,eAAepB,aAAf","sourcesContent":["import ActiveStorageProvider from \"react-activestorage-provider\";\nimport React, { Component } from \"react\";\n\nclass ImageTestForm extends Component {\n  render() {\n    return (\n      <div className=\"ui main\">\n        <ActiveStorageProvider\n          endpoint={{\n            path: \"/profile\",\n            model: \"User\",\n            attribute: \"avatar\",\n            method: \"PUT\"\n          }}\n          onSubmit={user => this.setState({ avatar: user.avatar })}\n          render={({ handleUpload, uploads, ready }) => (\n            <div>\n              <input\n                type=\"file\"\n                disabled={!ready}\n                onChange={e => handleUpload(e.currentTarget.files)}\n              />\n\n              {uploads.map(upload => {\n                switch (upload.state) {\n                  case \"waiting\":\n                    return (\n                      <p key={upload.id}>\n                        Waiting to upload {upload.file.name}\n                      </p>\n                    );\n                  case \"uploading\":\n                    return (\n                      <p key={upload.id}>\n                        Uploading {upload.file.name}: {upload.progress}%\n                      </p>\n                    );\n                  case \"error\":\n                    return (\n                      <p key={upload.id}>\n                        Error uploading {upload.file.name}: {upload.error}\n                      </p>\n                    );\n                  case \"finished\":\n                    return (\n                      <p key={upload.id}>\n                        Finished uploading {upload.file.name}\n                      </p>\n                    );\n                }\n              })}\n            </div>\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageTestForm;\n"]},"metadata":{},"sourceType":"module"}